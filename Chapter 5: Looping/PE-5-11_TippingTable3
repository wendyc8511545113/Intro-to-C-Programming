/*
In a “You Do It” section of Chapter 5 in your book, you created a tipping table for patrons to use when analyzing their restaurant bills. 
Now, create a modified program named TippingTable3 in which each of the following values is obtained from user input:

The lowest tipping percentage
The highest tipping percentage
The lowest possible restaurant bill
The highest restaurant bill
Below is a summary of the "You Do It" section's instructions:

Write a program that creates a tipping table that restaurant patrons can use to approximate the correct tip for meals. Prices range from $10 to $100, and tipping percentage rates range from 10 percent to 25 percent. 
The program uses several loops. An example of the program is shown below:

Annotation 2020-03-10 160056.png

In order to prepend the $ to currency values, the program will need to use the CultureInfo.GetCultureInfo method. 
In order to do this, include the statement using System.Globalization; at the top of your program and format the output statements as follows: 
WriteLine("This is an example: {0}", value.ToString("C", CultureInfo.GetCultureInfo("en-US")));
*/

using System;
using static System.Console;
using System.Globalization;
class TippingTable3
{
    static void Main()
    {
        // Get user input for the lowest and highest tipping percentage
        Write("Enter the lowest tipping percentage (e.g., 10 for 10%): ");
        double lowestTipPercentage = GetValidPercentageInput();

        Write("Enter the highest tipping percentage (e.g., 25 for 25%): ");
        double highestTipPercentage = GetValidPercentageInput();

        // Get user input for the lowest and highest restaurant bill
        Write("Enter the lowest restaurant bill (e.g., 10): ");
        double lowestBillAmount = GetValidBillInput();

        Write("Enter the highest restaurant bill (e.g., 100): ");
        double highestBillAmount = GetValidBillInput();

        // Print Header
        WriteLine("\n{0,10} {1,10} {2,10} {3,10} {4,10}", "Price", $"{lowestTipPercentage}%  ", $"{(lowestTipPercentage + 5)}%  ", $"{(lowestTipPercentage + 10)}%  ", $"{highestTipPercentage}% ");
        WriteLine(new string('-', 50));

        // Tipping Table Calculation and Display for given price range (only incrementing by 10)
        for (double price = lowestBillAmount; price <= highestBillAmount; price += 10)
        {
            Write("{0,10:F2} |", price);
            
            // Adjust for user-defined tipping percentage range
            for (double percentage = lowestTipPercentage; percentage <= highestTipPercentage; percentage += 5)
            {
                double tipAmount = price * (percentage / 100);
                double totalPrice = price + tipAmount;
                Write(" {0,10:F2} |", totalPrice);
            }

            WriteLine();
        }

        // User Input for a specific bill amount
        WriteLine("\nEnter your bill amount: ");
        double billAmount;

        // Input validation for a valid positive number
        while (!double.TryParse(ReadLine(), out billAmount) || billAmount <= 0)
        {
            WriteLine("Invalid input! Please enter a valid positive number for the bill.");
            WriteLine("Enter your bill amount: ");
        }

        // Calculate the lowest and highest tip amounts
        double lowestTip = billAmount * (lowestTipPercentage / 100);
        double highestTip = billAmount * (highestTipPercentage / 100);

        // Calculate the lowest and highest possible restaurant bill
        double lowestBill = billAmount + lowestTip;
        double highestBill = billAmount + highestTip;

        // Display the calculated values
        WriteLine($"\nFor a bill of ${billAmount:F2}:");
        WriteLine($"Lowest Tip ({lowestTipPercentage}%): ${lowestTip:F2}");
        WriteLine($"Highest Tip ({highestTipPercentage}%): ${highestTip:F2}");
        WriteLine($"Lowest Total Bill: ${lowestBill:F2}");
        WriteLine($"Highest Total Bill: ${highestBill:F2}");
    }

    // Method to get a valid tipping percentage
    static double GetValidPercentageInput()
    {
        double percentage;
        while (!double.TryParse(ReadLine(), out percentage) || percentage < 0 || percentage > 100)
        {
            WriteLine("Invalid input! Please enter a valid percentage between 0 and 100.");
        }
        return percentage;
    }

    // Method to get a valid restaurant bill amount
    static double GetValidBillInput()
    {
        double billAmount;
        while (!double.TryParse(ReadLine(), out billAmount) || billAmount <= 0)
        {
            WriteLine("Invalid input! Please enter a valid positive number for the bill.");
        }
        return billAmount;
    }
}
